% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valhalla.R
\name{od_matrix}
\alias{od_matrix}
\title{Generate Tidy Origin-Destination Data using Valhalla}
\usage{
od_matrix(
  froms,
  from_id_col,
  tos,
  to_id_col,
  costing,
  batch_size,
  minimum_reachability
)
}
\arguments{
\item{froms}{A tibble containing origin locations in columns named `lat` and
`lon`, and an optional column with human-readable names.}

\item{from_id_col}{The name of the column in `froms` that contains
human-readable names.}

\item{tos}{A tibble containing destination locations in columns named `lat`
and `lon`, and an optional column with human-readable names.}

\item{to_id_col}{The name of the column in `tos` that contains human-readable
names.}

\item{costing}{The travel costing method: at present "auto" and "pedestrian"
are supported.}

\item{batch_size}{The number of origin points to process per API call.}

\item{minimum_reachability}{The minimum number of nodes a candidate network
needs to have before it is included. Try increasing this value (e.g. to
500) if Valhalla is getting stuck in small disconnected road networks.}
}
\value{

}
\description{
This function creates a tidy (i.e. long) tibble of
  origin-destination trip data using the Valhalla routing engine. For a set
  of o origins and d destinations, it returns a tibble with (o x d) rows with
  the travel distance and time between each pair. It can handle several
  different travel modes and routing options.

  This function calls `valhalla::sources_to_targets()`, which interacts with
  the Valhalla API directly, but offers several user-friendly features.

  * You can specify human-readable indices with `from_id_col` and
  `to_id_col`. (Valhalla's API only returns zero-indexed integer
  identifiers.)
  * You can specify a `batch_size` to break computation into
  several smaller API calls, to prevent your Valhalla instance from running
  out of memory. This seems especially important for pedestrian routing,
  where I've sometimes needed to use a batch size as small as 5.
}
